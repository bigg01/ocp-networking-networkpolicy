global
        #log /dev/log    local0
        #log /dev/log    local1 notice
        #chroot /var/lib/haproxy
        #stats socket /run/haproxy/admin.sock mode 660 level admin
        stats timeout 5s
        #user haproxy
        #group haproxy
        #daemon
        # Default SSL material locations
        #ca-base /etc/ssl/certs
        #crt-base /etc/ssl/private
        # Default ciphers to use on SSL-enabled listening sockets.
        # For more information, see ciphers(1SSL).
        #ssl-default-bind-ciphers kEECDH+aRSA+AES:kRSA+AES:+AES256:RC4-SHA:!kEDH:!LOW:!EXP:!MD5:!aNULL:!eNULL
defaults
        log     global
        mode    http
        option  httplog
        option  dontlognull
        #timeout connect 5000
        #timeout client  50000
        #timeout server  50000

listen  stats
        bind            *:1936
        mode            http
        log             global
        maxconn 10
            timeout http-request    10s
    timeout queue           1m
    timeout connect         10s
    timeout client          1m
    timeout server          1m
    timeout http-keep-alive 10s
    timeout check           10s
    maxconn                 3000
        stats enable
        stats hide-version
        stats refresh 5s
        stats show-node
        #stats auth admin:password
        stats uri  /haproxy?stats



frontend localnodes
    bind *:8080
    mode http
    option  httplog
    errorfile 403 ./403-mycustom.http
    # genric rule per zone
    acl whitelist src -m ip 10.0.1.0/24
    # route specific ACL
    acl whitelist src -m ip 10.0.0.217 10.0.0.208
    # block all not whitelisted IPs
    block if !whitelist
    use_backend nodes if whitelist


backend nodes
    mode http
    balance leastconn
    option forwardfor
    #option httpchk
    server idx2 10.0.0.208:4444 check






HTTP/1.0 403 Forbidden
Cache-Control: no-cache
Connection: close
Content-Type: text/html

<!DOCTYPE html>
<html lang="en">
  <head>
    <title>SIX Forbidden</title>
  </head> 
  <body style="font-family:Arial,Helvetica,sans-serif;">
    <div style="margin: 0 auto; width: 960px;"> 
    <p>
    <img src="https://www.six-payment-services.com/etc/designs/sixwebv2/build/images/logos/logo2-six.min.svg" >

          <h1 >SIX Info - Forbidden</h1>
      </p>   
           <div class="cover"><h1>Access Denied <small>Error 403</small></h1><p class="lead">The requested resource requires IP whitelisting.</p></div>
    <footer><p>Technical Contact: <a href="mailto:x@example.com">x@example.com</a></p></footer>
    </div>
  </body> 
</html>






global
        #log /dev/log    local0
        #log /dev/log    local1 notice
        #chroot /var/lib/haproxy
        #stats socket /run/haproxy/admin.sock mode 660 level admin
        stats timeout 5s
        #user haproxy
        #group haproxy
        #daemon
        # Default SSL material locations
        #ca-base /etc/ssl/certs
        #crt-base /etc/ssl/private
        # Default ciphers to use on SSL-enabled listening sockets.
        # For more information, see ciphers(1SSL).
        #ssl-default-bind-ciphers kEECDH+aRSA+AES:kRSA+AES:+AES256:RC4-SHA:!kEDH:!LOW:!EXP:!MD5:!aNULL:!eNULL
defaults
        log     global
        mode    http
        option  httplog
        option  dontlognull
        #timeout connect 5000
        #timeout client  50000
        #timeout server  50000

listen  stats
        bind            *:1936
        mode            http
        log             global
        maxconn 10
            timeout http-request    10s
    timeout queue           1m
    timeout connect         10s
    timeout client          1m
    timeout server          1m
    timeout http-keep-alive 10s
    timeout check           10s
    maxconn                 3000
        stats enable
        stats hide-version
        stats refresh 5s
        stats show-node
        #stats auth admin:password
        stats uri  /haproxy?stats



frontend localnodes
    bind *:8080
    mode http
    option  httplog
    errorfile 403 ./403-mycustom.http
    # genric rule per zone
    acl whitelist src -m ip 10.0.1.0/24
    # route specific ACL
    #acl whitelist src -m ip %[req.hdr(host),map_ip(./file.map')]
    #acl whitelist src %[req.hdr(host),lower,map_ip(./file.map,'0.0.0.0')]
    acl whitelist src %[req.hdr(host),map_str_ip(./file.map,'0.0.0.0')]
    # block all not whitelisted IPs
    http-request deny if !whitelist
    use_backend nodes if whitelist


backend nodes
    mode http
    balance leastconn
    option forwardfor
    #option httpchk
    server idx2 10.0.0.208:4444 check
    
    
cat file.map
oli.local 10.0.0.4




The problem with "%[]" is that it became widespread enough to let people
believe it can be used everywhere. It's only valid in some arguments of
the http-request actions, and in log formats of course. It cannot be used
to describe ACL patterns since by definitions these patterns are constant.

In your case, if you need to check that the combination of (source,cookie)
matches one in your table, I think you could proceed like this :
